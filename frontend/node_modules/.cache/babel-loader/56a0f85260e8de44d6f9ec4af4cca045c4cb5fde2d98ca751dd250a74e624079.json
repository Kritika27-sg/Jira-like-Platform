{"ast":null,"code":"var _jsxFileName = \"/home/kritika/Documents/project/frontend/src/components/common/PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    loading,\n    isAuthenticated,\n    getToken\n  } = useAuth();\n\n  // Show loading state while authentication is being determined\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        fontSize: '18px'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Check both user state and token existence for more reliable authentication\n  const token = getToken();\n  const authenticated = isAuthenticated();\n\n  // Debug logging (remove in production)\n  console.log('PrivateRoute - User:', user);\n  console.log('PrivateRoute - Token exists:', !!token);\n  console.log('PrivateRoute - Is authenticated:', authenticated);\n\n  // If no user or no token, redirect to login\n  if (!user || !token || !authenticated) {\n    console.log('PrivateRoute - Redirecting to login');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  // User is authenticated, render the protected component\n  console.log('PrivateRoute - Rendering protected content');\n  return children;\n};\n_s(PrivateRoute, \"mn/6f3qaYwmPSiNpBQZVsSXmcyA=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoute","children","_s","user","loading","isAuthenticated","getToken","style","display","justifyContent","alignItems","height","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","token","authenticated","console","log","to","replace","_c","$RefreshReg$"],"sources":["/home/kritika/Documents/project/frontend/src/components/common/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\n\nconst PrivateRoute = ({ children }) => {\n  const { user, loading, isAuthenticated, getToken } = useAuth();\n\n  // Show loading state while authentication is being determined\n  if (loading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh',\n        fontSize: '18px' \n      }}>\n        Loading...\n      </div>\n    );\n  }\n\n  // Check both user state and token existence for more reliable authentication\n  const token = getToken();\n  const authenticated = isAuthenticated();\n  \n  // Debug logging (remove in production)\n  console.log('PrivateRoute - User:', user);\n  console.log('PrivateRoute - Token exists:', !!token);\n  console.log('PrivateRoute - Is authenticated:', authenticated);\n\n  // If no user or no token, redirect to login\n  if (!user || !token || !authenticated) {\n    console.log('PrivateRoute - Redirecting to login');\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // User is authenticated, render the protected component\n  console.log('PrivateRoute - Rendering protected content');\n  return children;\n};\n\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC,IAAI;IAAEC,OAAO;IAAEC,eAAe;IAAEC;EAAS,CAAC,GAAGT,OAAO,CAAC,CAAC;;EAE9D;EACA,IAAIO,OAAO,EAAE;IACX,oBACEL,OAAA;MAAKQ,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE;MACZ,CAAE;MAAAX,QAAA,EAAC;IAEH;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEV;;EAEA;EACA,MAAMC,KAAK,GAAGX,QAAQ,CAAC,CAAC;EACxB,MAAMY,aAAa,GAAGb,eAAe,CAAC,CAAC;;EAEvC;EACAc,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEjB,IAAI,CAAC;EACzCgB,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE,CAAC,CAACH,KAAK,CAAC;EACpDE,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEF,aAAa,CAAC;;EAE9D;EACA,IAAI,CAACf,IAAI,IAAI,CAACc,KAAK,IAAI,CAACC,aAAa,EAAE;IACrCC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,oBAAOrB,OAAA,CAACH,QAAQ;MAACyB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACAG,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;EACzD,OAAOnB,QAAQ;AACjB,CAAC;AAACC,EAAA,CApCIF,YAAY;EAAA,QACqCH,OAAO;AAAA;AAAA0B,EAAA,GADxDvB,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}