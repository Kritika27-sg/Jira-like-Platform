{"ast":null,"code":"var _jsxFileName = \"/home/kritika/Documents/project/frontend/src/components/auth/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\n// It's good practice to get this from environment variables\n// const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst clientId = '1080816176181-p23c90520lrbhc1blep9q4pak6j14ei3.apps.googleusercontent.com';\nconst LoginPage = () => {\n  _s();\n  const {\n    login,\n    signUp\n  } = useAuth(); // Assuming login/signUp from context handle local state updates\n  const navigate = useNavigate();\n  const [isNewUser, setIsNewUser] = useState(false);\n  const [name, setName] = useState(''); // This will be used as username for traditional login\n  const [role, setRole] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false); // Add loading state for buttons\n  const [errorMsg, setErrorMsg] = useState(''); // Add error message state\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setErrorMsg(''); // Clear previous errors\n\n    if (isNewUser && !role) {\n      setErrorMsg('Please select a role.');\n      setLoading(false);\n      return;\n    }\n    try {\n      if (isNewUser) {\n        // SIGN-UP LOGIC\n        // Assuming your signUp function from AuthContext handles the API call to create user\n        // If your sign-up API also returns a token, you should store it here too.\n        await signUp({\n          name,\n          email: '',\n          password,\n          role\n        }); // Email is not currently used for sign-up\n        alert('Account created successfully! Please log in with your new credentials.');\n        setIsNewUser(false); // After sign-up, switch to login form\n        setName('');\n        setPassword('');\n        setRole('');\n      } else {\n        // TRADITIONAL LOGIN LOGIC\n        const res = await fetch('http://localhost:8000/auth/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded' // Required for FastAPI's OAuth2PasswordRequestForm\n          },\n          body: new URLSearchParams({\n            username: name,\n            // Map 'name' state to 'username' for the backend\n            password: password\n          }).toString()\n        });\n        if (!res.ok) {\n          const errorData = await res.json();\n          const message = errorData.detail || 'Login failed.';\n          console.error('Login failed:', message);\n          throw new Error(message);\n        }\n        const data = await res.json();\n        // data should typically contain { \"access_token\": \"...\", \"token_type\": \"bearer\" }\n        // If your backend's /auth/token also returns user details, you can use data.user\n        // otherwise, you might need an additional fetch call to /users/me using the new token.\n\n        localStorage.setItem('jira-token', data.access_token);\n        console.log('Token stored:', localStorage.getItem('jira-token'));\n\n        // If your backend's /auth/token endpoint doesn't return user details directly,\n        // you would fetch them here, e.g.:\n        // const userRes = await fetch('http://localhost:8000/users/me', {\n        //   headers: { 'Authorization': `Bearer ${data.access_token}` },\n        // });\n        // const userData = await userRes.json();\n        // login(userData); // Pass fetched user data to your AuthContext\n\n        // Assuming your login context function needs `user` object to update global state\n        // For now, let's assume 'data' might contain a 'user' object or you derive it.\n        // If not, 'login' function from AuthContext might just take the token.\n        // For simplicity, let's pass a placeholder if `data.user` is truly not available.\n        login(data.user || {\n          name: name,\n          role: role\n        }); // Adjust based on what your login context expects\n\n        alert('Login successful! Redirecting to dashboard...');\n        navigate('/dashboard', {\n          replace: true\n        });\n      }\n    } catch (error) {\n      setErrorMsg(error.message || 'Operation failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGoogleSuccess = async credentialResponse => {\n    setLoading(true);\n    setErrorMsg('');\n    const googleToken = credentialResponse.credential;\n    try {\n      // This is for your backend to verify the Google token and issue its own JWT\n      const res = await fetch(`http://localhost:8000/auth/google/callback?token=${googleToken}`);\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(errorData.detail || 'Google login failed');\n      }\n      const data = await res.json();\n      localStorage.setItem('jira-token', data.access_token); // Correctly storing token from backend\n      login(data.user); // Assuming backend returns user details here\n      navigate('/dashboard', {\n        replace: true\n      });\n    } catch (error) {\n      setErrorMsg('Google authentication failed: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleError = () => {\n    setErrorMsg('Google login failed. Please try again.');\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.titleText,\n        children: \"JIRA-LIKE PLATFORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.loginBox,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.subtitle,\n          children: isNewUser ? 'Create Account' : 'Welcome!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.error,\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 24\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            style: styles.label,\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            style: styles.input,\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), isNewUser &&\n          /*#__PURE__*/\n          // Only show role selection for new users signing up\n          _jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              style: styles.label,\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"role\",\n              value: role,\n              onChange: e => setRole(e.target.value),\n              style: styles.input // Re-using input style for select\n              ,\n              disabled: loading,\n              required: isNewUser // Required only when signing up\n              ,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select your role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Project Manager\",\n                children: \"Project Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Developer\",\n                children: \"Developer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Client\",\n                children: \"Client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            style: styles.label,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            style: styles.input,\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: styles.button,\n            disabled: loading,\n            children: loading ? 'Processing...' : isNewUser ? 'Sign Up' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.orSeparator,\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleSuccess,\n          onError: handleError,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.toggleLink,\n          children: isNewUser ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setIsNewUser(false);\n                setErrorMsg('');\n              },\n              style: styles.linkButton,\n              disabled: loading,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"New user? \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setIsNewUser(true);\n                setErrorMsg('');\n              },\n              style: styles.linkButton,\n              disabled: loading,\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"ejiCj4hT6g3wTqkfz8Ltkl/FBd8=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nconst styles = {\n  container: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'linear-gradient(135deg, #667eea, #764ba2)',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    padding: '20px'\n  },\n  titleText: {\n    fontSize: '50px',\n    fontFamily: \"'Arial', sans-serif\",\n    color: '#fff',\n    marginBottom: '40px'\n  },\n  loginBox: {\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 8px 16px rgba(0,0,0,0.25)',\n    padding: '40px',\n    maxWidth: '400px',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'center'\n  },\n  subtitle: {\n    marginBottom: '30px',\n    color: '#333'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'left'\n  },\n  label: {\n    marginBottom: '8px',\n    fontWeight: '600',\n    color: '#555'\n  },\n  input: {\n    padding: '12px 15px',\n    marginBottom: '20px',\n    borderRadius: '8px',\n    border: '1px solid #ccc',\n    fontSize: '16px',\n    outline: 'none',\n    transition: 'border-color 0.3s ease'\n  },\n  button: {\n    padding: '14px',\n    backgroundColor: '#667eea',\n    color: '#fff',\n    fontWeight: '700',\n    fontSize: '16px',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease',\n    opacity: 1 // Default opacity\n  },\n  orSeparator: {\n    margin: '20px 0',\n    color: '#777'\n  },\n  toggleLink: {\n    marginTop: '15px',\n    color: '#555'\n  },\n  linkButton: {\n    background: 'none',\n    border: 'none',\n    color: '#667eea',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n    padding: 0\n  },\n  error: {\n    // New style for error messages\n    color: 'red',\n    marginBottom: '15px',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  }\n};\n\n// Add disabled styles for buttons if needed more granularly\nstyles.button[':disabled'] = {\n  opacity: 0.6,\n  cursor: 'not-allowed'\n};\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","useAuth","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","clientId","LoginPage","_s","login","signUp","navigate","isNewUser","setIsNewUser","name","setName","role","setRole","password","setPassword","loading","setLoading","errorMsg","setErrorMsg","handleSubmit","e","preventDefault","email","alert","res","fetch","method","headers","body","URLSearchParams","username","toString","ok","errorData","json","message","detail","console","error","Error","data","localStorage","setItem","access_token","log","getItem","user","replace","handleGoogleSuccess","credentialResponse","googleToken","credential","handleError","children","style","styles","container","titleText","fileName","_jsxFileName","lineNumber","columnNumber","loginBox","subtitle","onSubmit","form","htmlFor","label","type","id","placeholder","value","onChange","target","input","disabled","required","button","orSeparator","onSuccess","onError","toggleLink","onClick","linkButton","_c","minHeight","display","flexDirection","justifyContent","alignItems","background","fontFamily","padding","fontSize","color","marginBottom","backgroundColor","borderRadius","boxShadow","maxWidth","width","boxSizing","textAlign","fontWeight","border","outline","transition","cursor","opacity","margin","marginTop","textDecoration","$RefreshReg$"],"sources":["/home/kritika/Documents/project/frontend/src/components/auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\n// It's good practice to get this from environment variables\n// const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst clientId = '1080816176181-p23c90520lrbhc1blep9q4pak6j14ei3.apps.googleusercontent.com';\n\nconst LoginPage = () => {\n  const { login, signUp } = useAuth(); // Assuming login/signUp from context handle local state updates\n  const navigate = useNavigate();\n\n  const [isNewUser, setIsNewUser] = useState(false);\n  const [name, setName] = useState(''); // This will be used as username for traditional login\n  const [role, setRole] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false); // Add loading state for buttons\n  const [errorMsg, setErrorMsg] = useState(''); // Add error message state\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setErrorMsg(''); // Clear previous errors\n\n    if (isNewUser && !role) {\n      setErrorMsg('Please select a role.');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      if (isNewUser) {\n        // SIGN-UP LOGIC\n        // Assuming your signUp function from AuthContext handles the API call to create user\n        // If your sign-up API also returns a token, you should store it here too.\n        await signUp({ name, email: '', password, role }); // Email is not currently used for sign-up\n        alert('Account created successfully! Please log in with your new credentials.');\n        setIsNewUser(false); // After sign-up, switch to login form\n        setName('');\n        setPassword('');\n        setRole('');\n      } else {\n        // TRADITIONAL LOGIN LOGIC\n        const res = await fetch('http://localhost:8000/auth/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded', // Required for FastAPI's OAuth2PasswordRequestForm\n          },\n          body: new URLSearchParams({\n            username: name, // Map 'name' state to 'username' for the backend\n            password: password,\n          }).toString(),\n        });\n\n        if (!res.ok) {\n          const errorData = await res.json();\n          const message = errorData.detail || 'Login failed.';\n          console.error('Login failed:', message);\n          throw new Error(message);\n        }\n\n        const data = await res.json();\n        // data should typically contain { \"access_token\": \"...\", \"token_type\": \"bearer\" }\n        // If your backend's /auth/token also returns user details, you can use data.user\n        // otherwise, you might need an additional fetch call to /users/me using the new token.\n\n        localStorage.setItem('jira-token', data.access_token);\n        console.log('Token stored:', localStorage.getItem('jira-token'));\n\n        // If your backend's /auth/token endpoint doesn't return user details directly,\n        // you would fetch them here, e.g.:\n        // const userRes = await fetch('http://localhost:8000/users/me', {\n        //   headers: { 'Authorization': `Bearer ${data.access_token}` },\n        // });\n        // const userData = await userRes.json();\n        // login(userData); // Pass fetched user data to your AuthContext\n\n        // Assuming your login context function needs `user` object to update global state\n        // For now, let's assume 'data' might contain a 'user' object or you derive it.\n        // If not, 'login' function from AuthContext might just take the token.\n        // For simplicity, let's pass a placeholder if `data.user` is truly not available.\n        login(data.user || { name: name, role: role }); // Adjust based on what your login context expects\n\n        alert('Login successful! Redirecting to dashboard...');\n        navigate('/dashboard', { replace: true });\n      }\n    } catch (error) {\n      setErrorMsg(error.message || 'Operation failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    setLoading(true);\n    setErrorMsg('');\n    const googleToken = credentialResponse.credential;\n\n    try {\n      // This is for your backend to verify the Google token and issue its own JWT\n      const res = await fetch(`http://localhost:8000/auth/google/callback?token=${googleToken}`);\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(errorData.detail || 'Google login failed');\n      }\n\n      const data = await res.json();\n      localStorage.setItem('jira-token', data.access_token); // Correctly storing token from backend\n      login(data.user); // Assuming backend returns user details here\n      navigate('/dashboard', { replace: true });\n    } catch (error) {\n      setErrorMsg('Google authentication failed: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleError = () => {\n    setErrorMsg('Google login failed. Please try again.');\n  };\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n      <div style={styles.container}>\n        {/* Title Text */}\n        <h1 style={styles.titleText}>JIRA-LIKE PLATFORM</h1>\n\n        <div style={styles.loginBox}>\n          <h2 style={styles.subtitle}>{isNewUser ? 'Create Account' : 'Welcome!'}</h2>\n\n          {errorMsg && <p style={styles.error}>{errorMsg}</p>} {/* Display error messages */}\n\n          <form onSubmit={handleSubmit} style={styles.form}>\n            <label htmlFor=\"name\" style={styles.label}>Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"Enter your name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              style={styles.input}\n              disabled={loading}\n              required\n            />\n\n            {isNewUser && ( // Only show role selection for new users signing up\n              <>\n                <label htmlFor=\"role\" style={styles.label}>Role</label>\n                <select\n                  id=\"role\"\n                  value={role}\n                  onChange={(e) => setRole(e.target.value)}\n                  style={styles.input} // Re-using input style for select\n                  disabled={loading}\n                  required={isNewUser} // Required only when signing up\n                >\n                  <option value=\"\">Select your role</option>\n                  <option value=\"Admin\">Admin</option>\n                  <option value=\"Project Manager\">Project Manager</option>\n                  <option value=\"Developer\">Developer</option>\n                  <option value=\"Client\">Client</option>\n                  {/* Add other roles as necessary */}\n                </select>\n              </>\n            )}\n\n            <label htmlFor=\"password\" style={styles.label}>Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              style={styles.input}\n              disabled={loading}\n              required\n            />\n\n            <button type=\"submit\" style={styles.button} disabled={loading}>\n              {loading ? 'Processing...' : (isNewUser ? 'Sign Up' : 'Login')}\n            </button>\n          </form>\n\n          <div style={styles.orSeparator}>OR</div>\n\n          <GoogleLogin\n            onSuccess={handleGoogleSuccess}\n            onError={handleError}\n            disabled={loading}\n          />\n\n          <div style={styles.toggleLink}>\n            {isNewUser ? (\n              <span>Already have an account? <button onClick={() => { setIsNewUser(false); setErrorMsg(''); }} style={styles.linkButton} disabled={loading}>Login</button></span>\n            ) : (\n              <span>New user? <button onClick={() => { setIsNewUser(true); setErrorMsg(''); }} style={styles.linkButton} disabled={loading}>Create Account</button></span>\n            )}\n          </div>\n        </div>\n      </div>\n    </GoogleOAuthProvider>\n  );\n};\n\nconst styles = {\n  container: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'linear-gradient(135deg, #667eea, #764ba2)',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    padding: '20px',\n  },\n  titleText: {\n    fontSize: '50px',\n    fontFamily: \"'Arial', sans-serif\",\n    color: '#fff',\n    marginBottom: '40px',\n  },\n  loginBox: {\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 8px 16px rgba(0,0,0,0.25)',\n    padding: '40px',\n    maxWidth: '400px',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'center',\n  },\n  subtitle: {\n    marginBottom: '30px',\n    color: '#333',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'left',\n  },\n  label: {\n    marginBottom: '8px',\n    fontWeight: '600',\n    color: '#555',\n  },\n  input: {\n    padding: '12px 15px',\n    marginBottom: '20px',\n    borderRadius: '8px',\n    border: '1px solid #ccc',\n    fontSize: '16px',\n    outline: 'none',\n    transition: 'border-color 0.3s ease',\n  },\n  button: {\n    padding: '14px',\n    backgroundColor: '#667eea',\n    color: '#fff',\n    fontWeight: '700',\n    fontSize: '16px',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease',\n    opacity: 1, // Default opacity\n  },\n  orSeparator: {\n    margin: '20px 0',\n    color: '#777',\n  },\n  toggleLink: {\n    marginTop: '15px',\n    color: '#555',\n  },\n  linkButton: {\n    background: 'none',\n    border: 'none',\n    color: '#667eea',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n    padding: 0,\n  },\n  error: { // New style for error messages\n    color: 'red',\n    marginBottom: '15px',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  }\n};\n\n// Add disabled styles for buttons if needed more granularly\nstyles.button[':disabled'] = {\n    opacity: 0.6,\n    cursor: 'not-allowed',\n};\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}