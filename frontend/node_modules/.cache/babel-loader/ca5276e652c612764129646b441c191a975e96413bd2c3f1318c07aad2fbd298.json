{"ast":null,"code":"var _jsxFileName = \"/home/kritika/Documents/project/frontend/src/components/auth/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\n// It's good practice to get this from environment variables\n// const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst clientId = '1080816176181-p23c90520lrbhc1blep9q4pak6j14ei3.apps.googleusercontent.com';\nconst LoginPage = () => {\n  _s();\n  const {\n    login\n  } = useAuth();\n  const navigate = useNavigate();\n  const [isNewUser, setIsNewUser] = useState(false);\n  const [name, setName] = useState('');\n  const [role, setRole] = useState('');\n  const [email, setEmail] = useState(''); // Added email field for signup\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setErrorMsg('');\n\n    // Validation\n    if (isNewUser) {\n      if (!name || !email || !password || !role) {\n        setErrorMsg('Please fill in all required fields.');\n        setLoading(false);\n        return;\n      }\n    } else {\n      if (!name || !password) {\n        setErrorMsg('Please enter both name and password.');\n        setLoading(false);\n        return;\n      }\n    }\n    try {\n      if (isNewUser) {\n        // SIGN-UP LOGIC\n        const signupData = {\n          name: name.trim(),\n          email: email.trim(),\n          password: password,\n          role: role\n        };\n        const res = await fetch('http://localhost:8000/auth/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            full_name: signupData.name,\n            email: signupData.email,\n            password: signupData.password,\n            role: signupData.role\n          })\n        });\n        if (!res.ok) {\n          const errorData = await res.json();\n          const message = errorData.detail || errorData.message || 'Signup failed.';\n          throw new Error(message);\n        }\n\n        // Don't need to store the response data, just show success message\n        alert('Account created successfully! Please log in with your new credentials.');\n\n        // Clear form and switch to login\n        setIsNewUser(false);\n        setName('');\n        setEmail('');\n        setPassword('');\n        setRole('');\n      } else {\n        // TRADITIONAL LOGIN LOGIC\n        const res = await fetch('http://localhost:8000/auth/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          body: new URLSearchParams({\n            username: name.trim(),\n            // Using name as username\n            password: password\n          }).toString()\n        });\n        if (!res.ok) {\n          const errorData = await res.json();\n          const message = errorData.detail || 'Login failed. Please check your credentials.';\n          throw new Error(message);\n        }\n        const data = await res.json();\n\n        // Store the token\n        localStorage.setItem('jira-token', data.access_token);\n\n        // Fetch user details using the token\n        const userRes = await fetch('http://localhost:8000/users/me', {\n          headers: {\n            'Authorization': `Bearer ${data.access_token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!userRes.ok) {\n          throw new Error('Failed to fetch user details');\n        }\n        const userData = await userRes.json();\n\n        // Update auth context with user data\n        login(userData);\n        alert('Login successful! Redirecting to dashboard...');\n        navigate('/dashboard', {\n          replace: true\n        });\n      }\n    } catch (error) {\n      console.error('Authentication error:', error);\n      setErrorMsg(error.message || 'Operation failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGoogleSuccess = async credentialResponse => {\n    setLoading(true);\n    setErrorMsg('');\n    const googleToken = credentialResponse.credential;\n    try {\n      const res = await fetch(`http://localhost:8000/auth/google/callback?token=${googleToken}`);\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(errorData.detail || 'Google login failed');\n      }\n      const data = await res.json();\n      localStorage.setItem('jira-token', data.access_token);\n      login(data.user);\n      navigate('/dashboard', {\n        replace: true\n      });\n    } catch (error) {\n      console.error('Google auth error:', error);\n      setErrorMsg('Google authentication failed: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleError = () => {\n    setErrorMsg('Google login failed. Please try again.');\n  };\n  const handleToggleMode = () => {\n    setIsNewUser(!isNewUser);\n    setErrorMsg('');\n    // Clear form when switching modes\n    setName('');\n    setEmail('');\n    setPassword('');\n    setRole('');\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: clientId,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.titleText,\n        children: \"JIRA-LIKE PLATFORM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.loginBox,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.subtitle,\n          children: isNewUser ? 'Create Account' : 'Welcome Back!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.error,\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            style: styles.label,\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            placeholder: \"Enter your name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            style: styles.input,\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), isNewUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              style: styles.label,\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              placeholder: \"Enter your email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              style: styles.input,\n              disabled: loading,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"role\",\n              style: styles.label,\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"role\",\n              value: role,\n              onChange: e => setRole(e.target.value),\n              style: styles.input,\n              disabled: loading,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select your role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Project Manager\",\n                children: \"Project Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Developer\",\n                children: \"Developer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Client\",\n                children: \"Client\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            style: styles.label,\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            style: styles.input,\n            disabled: loading,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: styles.button,\n            disabled: loading,\n            children: loading ? 'Processing...' : isNewUser ? 'Sign Up' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.orSeparator,\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleSuccess,\n          onError: handleError,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.toggleLink,\n          children: isNewUser ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleToggleMode,\n              style: styles.linkButton,\n              disabled: loading,\n              type: \"button\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"New user?\", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleToggleMode,\n              style: styles.linkButton,\n              disabled: loading,\n              type: \"button\",\n              children: \"Create Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"wM1GGcBESEk40xrohH4xtkWmc2c=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = LoginPage;\nconst styles = {\n  container: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'linear-gradient(135deg, #667eea, #764ba2)',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    padding: '20px'\n  },\n  titleText: {\n    fontSize: '50px',\n    fontFamily: \"'Arial', sans-serif\",\n    color: '#fff',\n    marginBottom: '40px'\n  },\n  loginBox: {\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 8px 16px rgba(0,0,0,0.25)',\n    padding: '40px',\n    maxWidth: '400px',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'center'\n  },\n  subtitle: {\n    marginBottom: '30px',\n    color: '#333'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'left'\n  },\n  label: {\n    marginBottom: '8px',\n    fontWeight: '600',\n    color: '#555'\n  },\n  input: {\n    padding: '12px 15px',\n    marginBottom: '20px',\n    borderRadius: '8px',\n    border: '1px solid #ccc',\n    fontSize: '16px',\n    outline: 'none',\n    transition: 'border-color 0.3s ease'\n  },\n  button: {\n    padding: '14px',\n    backgroundColor: '#667eea',\n    color: '#fff',\n    fontWeight: '700',\n    fontSize: '16px',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease',\n    opacity: 1\n  },\n  orSeparator: {\n    margin: '20px 0',\n    color: '#777'\n  },\n  toggleLink: {\n    marginTop: '15px',\n    color: '#555'\n  },\n  linkButton: {\n    background: 'none',\n    border: 'none',\n    color: '#667eea',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n    padding: 0,\n    marginLeft: '5px'\n  },\n  error: {\n    color: 'red',\n    marginBottom: '15px',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  }\n};\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","GoogleLogin","useAuth","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","clientId","LoginPage","_s","login","navigate","isNewUser","setIsNewUser","name","setName","role","setRole","email","setEmail","password","setPassword","loading","setLoading","errorMsg","setErrorMsg","handleSubmit","e","preventDefault","signupData","trim","res","fetch","method","headers","body","JSON","stringify","full_name","ok","errorData","json","message","detail","Error","alert","URLSearchParams","username","toString","data","localStorage","setItem","access_token","userRes","userData","replace","error","console","handleGoogleSuccess","credentialResponse","googleToken","credential","user","handleError","handleToggleMode","children","style","styles","container","titleText","fileName","_jsxFileName","lineNumber","columnNumber","loginBox","subtitle","onSubmit","form","htmlFor","label","type","id","placeholder","value","onChange","target","input","disabled","required","button","orSeparator","onSuccess","onError","toggleLink","onClick","linkButton","_c","minHeight","display","flexDirection","justifyContent","alignItems","background","fontFamily","padding","fontSize","color","marginBottom","backgroundColor","borderRadius","boxShadow","maxWidth","width","boxSizing","textAlign","fontWeight","border","outline","transition","cursor","opacity","margin","marginTop","textDecoration","marginLeft","$RefreshReg$"],"sources":["/home/kritika/Documents/project/frontend/src/components/auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\n// It's good practice to get this from environment variables\n// const clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst clientId = '1080816176181-p23c90520lrbhc1blep9q4pak6j14ei3.apps.googleusercontent.com';\n\nconst LoginPage = () => {\n  const { login } = useAuth();\n  const navigate = useNavigate();\n\n  const [isNewUser, setIsNewUser] = useState(false);\n  const [name, setName] = useState('');\n  const [role, setRole] = useState('');\n  const [email, setEmail] = useState(''); // Added email field for signup\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setErrorMsg('');\n\n    // Validation\n    if (isNewUser) {\n      if (!name || !email || !password || !role) {\n        setErrorMsg('Please fill in all required fields.');\n        setLoading(false);\n        return;\n      }\n    } else {\n      if (!name || !password) {\n        setErrorMsg('Please enter both name and password.');\n        setLoading(false);\n        return;\n      }\n    }\n\n    try {\n      if (isNewUser) {\n        // SIGN-UP LOGIC\n        const signupData = {\n          name: name.trim(),\n          email: email.trim(),\n          password: password,\n          role: role\n        };\n\n        const res = await fetch('http://localhost:8000/auth/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            full_name: signupData.name,\n            email: signupData.email,\n            password: signupData.password,\n            role: signupData.role\n          }),\n        });\n\n        if (!res.ok) {\n          const errorData = await res.json();\n          const message = errorData.detail || errorData.message || 'Signup failed.';\n          throw new Error(message);\n        }\n\n        // Don't need to store the response data, just show success message\n        alert('Account created successfully! Please log in with your new credentials.');\n        \n        // Clear form and switch to login\n        setIsNewUser(false);\n        setName('');\n        setEmail('');\n        setPassword('');\n        setRole('');\n        \n      } else {\n        // TRADITIONAL LOGIN LOGIC\n        const res = await fetch('http://localhost:8000/auth/token', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: new URLSearchParams({\n            username: name.trim(), // Using name as username\n            password: password,\n          }).toString(),\n        });\n\n        if (!res.ok) {\n          const errorData = await res.json();\n          const message = errorData.detail || 'Login failed. Please check your credentials.';\n          throw new Error(message);\n        }\n\n        const data = await res.json();\n        \n        // Store the token\n        localStorage.setItem('jira-token', data.access_token);\n        \n        // Fetch user details using the token\n        const userRes = await fetch('http://localhost:8000/users/me', {\n          headers: { \n            'Authorization': `Bearer ${data.access_token}`,\n            'Content-Type': 'application/json'\n          },\n        });\n\n        if (!userRes.ok) {\n          throw new Error('Failed to fetch user details');\n        }\n\n        const userData = await userRes.json();\n        \n        // Update auth context with user data\n        login(userData);\n        \n        alert('Login successful! Redirecting to dashboard...');\n        navigate('/dashboard', { replace: true });\n      }\n    } catch (error) {\n      console.error('Authentication error:', error);\n      setErrorMsg(error.message || 'Operation failed. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    setLoading(true);\n    setErrorMsg('');\n    const googleToken = credentialResponse.credential;\n\n    try {\n      const res = await fetch(`http://localhost:8000/auth/google/callback?token=${googleToken}`);\n      if (!res.ok) {\n        const errorData = await res.json();\n        throw new Error(errorData.detail || 'Google login failed');\n      }\n\n      const data = await res.json();\n      localStorage.setItem('jira-token', data.access_token);\n      login(data.user);\n      navigate('/dashboard', { replace: true });\n    } catch (error) {\n      console.error('Google auth error:', error);\n      setErrorMsg('Google authentication failed: ' + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleError = () => {\n    setErrorMsg('Google login failed. Please try again.');\n  };\n\n  const handleToggleMode = () => {\n    setIsNewUser(!isNewUser);\n    setErrorMsg('');\n    // Clear form when switching modes\n    setName('');\n    setEmail('');\n    setPassword('');\n    setRole('');\n  };\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}>\n      <div style={styles.container}>\n        <h1 style={styles.titleText}>JIRA-LIKE PLATFORM</h1>\n\n        <div style={styles.loginBox}>\n          <h2 style={styles.subtitle}>{isNewUser ? 'Create Account' : 'Welcome Back!'}</h2>\n\n          {errorMsg && <p style={styles.error}>{errorMsg}</p>}\n\n          <form onSubmit={handleSubmit} style={styles.form}>\n            <label htmlFor=\"name\" style={styles.label}>Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              placeholder=\"Enter your name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              style={styles.input}\n              disabled={loading}\n              required\n            />\n\n            {isNewUser && (\n              <>\n                <label htmlFor=\"email\" style={styles.label}>Email</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  placeholder=\"Enter your email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  style={styles.input}\n                  disabled={loading}\n                  required\n                />\n\n                <label htmlFor=\"role\" style={styles.label}>Role</label>\n                <select\n                  id=\"role\"\n                  value={role}\n                  onChange={(e) => setRole(e.target.value)}\n                  style={styles.input}\n                  disabled={loading}\n                  required\n                >\n                  <option value=\"\">Select your role</option>\n                  <option value=\"Admin\">Admin</option>\n                  <option value=\"Project Manager\">Project Manager</option>\n                  <option value=\"Developer\">Developer</option>\n                  <option value=\"Client\">Client</option>\n                </select>\n              </>\n            )}\n\n            <label htmlFor=\"password\" style={styles.label}>Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              style={styles.input}\n              disabled={loading}\n              required\n            />\n\n            <button type=\"submit\" style={styles.button} disabled={loading}>\n              {loading ? 'Processing...' : (isNewUser ? 'Sign Up' : 'Login')}\n            </button>\n          </form>\n\n          <div style={styles.orSeparator}>OR</div>\n\n          <GoogleLogin\n            onSuccess={handleGoogleSuccess}\n            onError={handleError}\n            disabled={loading}\n          />\n\n          <div style={styles.toggleLink}>\n            {isNewUser ? (\n              <span>Already have an account? \n                <button \n                  onClick={handleToggleMode} \n                  style={styles.linkButton} \n                  disabled={loading}\n                  type=\"button\"\n                >\n                  Login\n                </button>\n              </span>\n            ) : (\n              <span>New user? \n                <button \n                  onClick={handleToggleMode} \n                  style={styles.linkButton} \n                  disabled={loading}\n                  type=\"button\"\n                >\n                  Create Account\n                </button>\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n    </GoogleOAuthProvider>\n  );\n};\n\nconst styles = {\n  container: {\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    background: 'linear-gradient(135deg, #667eea, #764ba2)',\n    fontFamily: \"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\",\n    padding: '20px',\n  },\n  titleText: {\n    fontSize: '50px',\n    fontFamily: \"'Arial', sans-serif\",\n    color: '#fff',\n    marginBottom: '40px',\n  },\n  loginBox: {\n    backgroundColor: '#fff',\n    borderRadius: '12px',\n    boxShadow: '0 8px 16px rgba(0,0,0,0.25)',\n    padding: '40px',\n    maxWidth: '400px',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'center',\n  },\n  subtitle: {\n    marginBottom: '30px',\n    color: '#333',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'left',\n  },\n  label: {\n    marginBottom: '8px',\n    fontWeight: '600',\n    color: '#555',\n  },\n  input: {\n    padding: '12px 15px',\n    marginBottom: '20px',\n    borderRadius: '8px',\n    border: '1px solid #ccc',\n    fontSize: '16px',\n    outline: 'none',\n    transition: 'border-color 0.3s ease',\n  },\n  button: {\n    padding: '14px',\n    backgroundColor: '#667eea',\n    color: '#fff',\n    fontWeight: '700',\n    fontSize: '16px',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    transition: 'background-color 0.3s ease',\n    opacity: 1,\n  },\n  orSeparator: {\n    margin: '20px 0',\n    color: '#777',\n  },\n  toggleLink: {\n    marginTop: '15px',\n    color: '#555',\n  },\n  linkButton: {\n    background: 'none',\n    border: 'none',\n    color: '#667eea',\n    cursor: 'pointer',\n    textDecoration: 'underline',\n    padding: 0,\n    marginLeft: '5px',\n  },\n  error: {\n    color: 'red',\n    marginBottom: '15px',\n    textAlign: 'center',\n    fontWeight: 'bold',\n  }\n};\n\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}