{"ast":null,"code":"var _jsxFileName = \"/home/kritika/Documents/project/frontend/src/components/activityLog/ActivityLogList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getActivityLogsForTask } from '../../api/activityLogService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityLogList = ({\n  taskId\n}) => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const loadLogs = async () => {\n    setLoading(true);\n    try {\n      const data = await getActivityLogsForTask(taskId, localStorage.getItem('jira-token'));\n      setLogs(data);\n    } catch (err) {\n      alert(err.message);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    if (taskId) loadLogs();\n  }, [taskId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading activity logs...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Activity Log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        maxHeight: 200,\n        overflowY: 'auto'\n      },\n      children: logs.map(log => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"[\", new Date(log.timestamp).toLocaleString(), \"] User \", log.user_id, \" \", log.action]\n      }, log.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivityLogList, \"lYx/TOoNu7KeE6EXJa8Z4htpyYA=\");\n_c = ActivityLogList;\nexport default ActivityLogList;\nvar _c;\n$RefreshReg$(_c, \"ActivityLogList\");","map":{"version":3,"names":["React","useEffect","useState","getActivityLogsForTask","jsxDEV","_jsxDEV","ActivityLogList","taskId","_s","logs","setLogs","loading","setLoading","loadLogs","data","localStorage","getItem","err","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxHeight","overflowY","map","log","Date","timestamp","toLocaleString","user_id","action","id","_c","$RefreshReg$"],"sources":["/home/kritika/Documents/project/frontend/src/components/activityLog/ActivityLogList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getActivityLogsForTask } from '../../api/activityLogService';\n\nconst ActivityLogList = ({ taskId }) => {\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const loadLogs = async () => {\n    setLoading(true);\n    try {\n      const data = await getActivityLogsForTask(taskId, localStorage.getItem('jira-token'));\n      setLogs(data);\n    } catch (err) {\n      alert(err.message);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (taskId) loadLogs();\n  }, [taskId]);\n\n  if (loading) return <div>Loading activity logs...</div>;\n\n  return (\n    <div>\n      <h3>Activity Log</h3>\n      <ul style={{ maxHeight: 200, overflowY: 'auto' }}>\n        {logs.map((log) => (\n          <li key={log.id}>\n            [{new Date(log.timestamp).toLocaleString()}] User {log.user_id} {log.action}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ActivityLogList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,sBAAsB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtE,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3BD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,IAAI,GAAG,MAAMX,sBAAsB,CAACI,MAAM,EAAEQ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CAAC;MACrFN,OAAO,CAACI,IAAI,CAAC;IACf,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IACpB;IACAP,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,IAAIM,MAAM,EAAEM,QAAQ,CAAC,CAAC;EACxB,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,IAAII,OAAO,EAAE,oBAAON,OAAA;IAAAe,QAAA,EAAK;EAAwB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEvD,oBACEnB,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA;MAAIoB,KAAK,EAAE;QAAEC,SAAS,EAAE,GAAG;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,EAC9CX,IAAI,CAACmB,GAAG,CAAEC,GAAG,iBACZxB,OAAA;QAAAe,QAAA,GAAiB,GACd,EAAC,IAAIU,IAAI,CAACD,GAAG,CAACE,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,EAAC,SAAO,EAACH,GAAG,CAACI,OAAO,EAAC,GAAC,EAACJ,GAAG,CAACK,MAAM;MAAA,GADpEL,GAAG,CAACM,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CAjCIF,eAAe;AAAA8B,EAAA,GAAf9B,eAAe;AAmCrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}